ctypes 0.9.1 released
=====================

Overview

    ctypes is a ffi (Foreign Function Interface) package for Python
    2.3 and higher.

    ctypes allows to call functions exposed from dlls/shared libraries
    and has extensive facilities to create, access and manipulate
    simple and complicated C data types in Python - in other words:
    wrap libraries in pure Python.  It is even possible to implement C
    callback functions in pure Python.

    ctypes runs on Windows, MacOS X, Linux, Solaris, FreeBSD.  It may
    also run on other systems, provided that libffi supports this
    platform.

    On windows, ctypes contains a ctypes.com package which allows to
    call and implement custom COM interfaces.


Changes in 0.9.1

  ctypes changes

    The _ctypes.call_function function, although private and
    deprecated, has been put back in - it is used by Gary Bishop's
    readline module.

    Array and pointer instances now support slicing, for pointers only
    getslice is implemented (setslice is too dangerous, probably).
    Slices are represented as lists of the elements, except
    for character and unicode character pointer and arrays, where
    strings resp. unicode strings are used instead.

    On windows, the include files were missing from the source
    distribution.

    The alignment function was not exported by the ctypes module.  It
    returns the alignment requirements in bytes of a type or instance.

  experimental changes

    It is now possible to call Python API functions with ctypes.  This
    is an experimental feature and will probably change.  Please don't
    use it yet in production code, and watch the ctypes-users mailing
    list.

  ctypes.com changes

    ctypes now caches the types that WINFUNCTYPE and CFUNCTYPE
    creates, to avoid creation of a lot of similar classes. This makes
    importing files containing a lot of COM interfaces (like the ones
    that the readtlb tool generates) a lot (10 x) faster.

    COM servers now print a short usage message when they are run
    without the /regserver or /unregserver flag.

    VARIANT does now handle the COM DATE type (VT_DATE) as Python
    datetime.

    VARIANT now handles integers and longs - if longs are too large
    they are stored as doubles (VT_R8). Integers are now stored as
    VT_I4 instead of VT_INT.


    Detailed changelogs are in CVS (well, sometimes I forget to update
    them):
    
  <http://cvs.sourceforge.net/viewcvs.py/ctypes/ctypes/ChangeLog?rev=HEAD>

  <http://cvs.sourceforge.net/viewcvs.py/ctypes/ctypes/win32/com/ChangeLog?rev=HEAD>


Future plans

    The ultimate purpose of the 0.9 release series is to shake out the
    remaining bugs, especially on platforms I have no access to, and
    to target a rock stable ctypes 1.0 release.

    When ctypes 1.0 is released, the com framework will be split off
    into a separate framework named 'comtypes'.


Download

    Downloads are available in the sourceforge files section
    <http://sourceforge.net/project/showfiles.php?group_id=71702>

    Separate source distributions are available for windows and non-windows systems.
    Please use the .zip file for Windows (it contains the ctypes.com framework),
    and use the .tar.gz file for non-Windows systems (it contains the
    complete cross-platform libffi sources).

    Binary windows installers, which contain compiled extension
    modules, are also available, be sure to download the correct one
    for the Python version you are using.


Homepage

    <http://starship.python.net/crew/theller/ctypes/>

Enjoy,

Thomas